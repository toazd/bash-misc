#!/usr/bin/env bash
# https://www.shellcheck.net/wiki/SC2034
# shellcheck disable=SC2034
#
# USAGE: ./get-temp-wttrin <location> <optional unit: C|F>
#
# NOTES:
# https://wttr.in/:help
# https://github.com/chubin/wttr.in/blob/master/README.md
#
# Supported location types:
#    /paris                  # city name
#    /~Eiffel+tower          # any location (+ for spaces)
#    /Москва                 # Unicode name of any location in any language
#    /muc                    # airport code (3 letters)
#    /@stackoverflow.com     # domain name
#    /94107                  # area codes
#    /-78.46,106.79          # GPS coordinates

location=${1:-'Paris'}
unit=${2:-'mM'} # Default: Celcius
degrees='°'
nocloud='盛'
cloud=''
rain=''
snow=''
storm=''
temp_low=10
temp_high=27
lotempicon=''
midtempicon=''
hitempicon=''

case ${unit,,} in
    (c*|m*|'') unit='mM' ;;
    (f*) unit='u' ;;
esac

while IFS= read -r || [[ -n $REPLY ]]
do
    curr_weath=${REPLY%'|'*}
    unit=${REPLY#*'°'}
    curr_temp=${REPLY%'°'*}
    curr_temp=${curr_temp#*[-+]}

    if [[ -n $curr_temp ]]
    then
        if (( curr_temp < temp_low ))
        then
            printf '%s' "$curr_weath ${curr_temp}${degrees}${unit}"
        elif (( curr_temp >= temp_low && curr_temp <= temp_high ))
        then
            printf '%s' "$curr_weath ${curr_temp}${degrees}${unit}"
        elif (( curr_temp > temp_high ))
        then
            printf '%s' "$curr_weath ${curr_temp}${degrees}${unit}"
        fi
    else
        printf '%s' "?"
    fi
done <<EOC
$( # https://www.shellcheck.net/wiki/SC2140
# shellcheck disable=SC2140
curl -sL https://wttr.in/"$location"?0"$unit"qQT\&lang=en\&format="%c|%t")
EOC
