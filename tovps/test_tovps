#!/usr/bin/env bash

# $1 parameter = user@host
# $2 parameter = remote path to search

declare -a files=() checksums=()
declare ssh_string='ssh' \
        connect_to=${1:-'user@host'} \
        ciphers='chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com' \
        checksum=sha256sum \
        base_path=${2:-'/tmp'} \
        time_start=0 \
        time_end=0 \
        i=0

FindFiles()
{

    # Parse the output of find via ssh, adding each column element to its respective array
    time_start=$(date '+%s')
    while IFS= read -r || [[ -n $REPLY ]]
    do
        [[ $REPLY =~ ^$'\n'$ ]] && continue
        files+=("${REPLY##*[[:blank:]]}")
        checksums+=("${REPLY%%[[:blank:]]*}")
    done < <("$ssh_string" -c "$ciphers" "$connect_to" find "$base_path" -type f -exec "$checksum" '{}' + \; 2>/dev/null | LC_ALL=C sort -fk2.3) # parameter expansion version (full path is in array, faster)
    ##done < <("$ssh_string" -c "$ciphers" "$connect_to" find "$base_path" -type f -exec "$checksum" '{}' + \; | LC_ALL=C sort -fk2.3 | sed "s|$base_path||g") # sed version (base_path is not in array, slower)
    time_end=$(date '+%s')

    # Report
    printf '%s\n' "Found ${#files[@]} files and calculated ${#checksums[@]} checksums in $(( time_end - time_start )) seconds"

}

ListAllFiles()
{

    # List each element of each array in a similar format to {md,sha}*sum
    for i in "${!files[@]}"
    do
        printf '%s  %s\n' "${checksums[i]/#$base_path}" "${files[i]/#$base_path}" # parameter expansion version (full path is in array, faster)
        ##printf '%s  %s\n' "${checksums[i]}" "${files[i]}" # sed version (base_path is not in array, slower)
    done

}

QueryHostCiphers()
{

    opts=(cipher cipher-auth mac kex key key-cert key-plain key-sig sig)
    for option in "${opts[@]}"
    do
        printf '\n%s\n' "$option:"
        "$ssh_string" -Q "$option" "$connect_to"
    done

}

##QueryHostCiphers
FindFiles
##ListAllFiles
